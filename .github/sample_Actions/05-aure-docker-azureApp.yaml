name: workflow to login into Azure, authenticate to github, create a docker image, push and use the image in Azure app

on: [ push, workflow_dispatch ]

#Environment variables https://docs.github.com/en/actions/learn-github-actions/environment-variables
env:
  AZURE_LOCATION: ccccccc
  AZURE_RESOURCE_GROUP: aaaaaaa
  AZURE_APP_PLAN: bbbbbbb
  AZURE_WEBAPP_NAME: xxxxxxxx  
  IMAGE_REGISTRY_URL: yyyyyyy
  DOCKER_IMAGE_NAME: zzzzzzzz
    
jobs:
  # # code inncomplete
  # build-docker-image:
  #   runs-on: ubuntu-latest
  #   name: Build-Docker-Image
  #   if: contains(github.event.pull_request.labels.*.name, 'destroy environment')
  #   ...

  set-up-azure-resources:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
    
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    ## sample code to setup azure resources
    # set-up-azure-resources:
    #   runs-on: ubuntu-latest
  
    #   if: contains(github.event.pull_request.labels.*.name, 'spin up environment')
  
    #   ...
      
    # destroy-azure-resources:
    #   runs-on: ubuntu-latest

    #   if: contains(github.event.pull_request.labels.*.name, 'destroy environment')
    #   ...
      
      - name: Create Azure resource group
        # if: contains(github.event.pull_request.labels.*.name, 'spin up environment')if: contains(github.event.pull_request.labels.*.name, 'spin up environment')
        if: success()
        run: |
          az group create --location ${{env.AZURE_LOCATION}} --name ${{env.AZURE_RESOURCE_GROUP}} --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}
      - name: Create Azure app service plan
        if: success()
        run: |
          az appservice plan create --resource-group ${{env.AZURE_RESOURCE_GROUP}} --name ${{env.AZURE_APP_PLAN}} --is-linux --sku F1 --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}
      - name: Create webapp resource
        if: success()
        run: |
          az webapp create --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --plan ${{ env.AZURE_APP_PLAN }} --name ${{ env.AZURE_WEBAPP_NAME }}  --deployment-container-image-name nginx --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}
      - name: Configure webapp to use GitHub Packages
        if: success()
        run: |
          az webapp config container set --docker-custom-image-name nginx --docker-registry-server-password ${{secrets.GITHUB_TOKEN}} --docker-registry-server-url https://docker.pkg.github.com --docker-registry-server-user ${{github.actor}} --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}    
  
  # Notice that this job depends on a previous job, Build-Docker-Image. The previous job creates the artifact that gets deployed.
  Deploy-to-Azure:
      runs-on: ubuntu-latest
      needs: Build-Docker-Image
      name: Deploy app container to Azure
      steps:
        - uses: azure/docker-login@v1
          with:
            login-server: ${{env.IMAGE_REGISTRY_URL}}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
  
        - name: Deploy web app container
          uses: azure/webapps-deploy@v1
          with:
            app-name: ${{env.AZURE_WEBAPP_NAME}}
            images: ${{env.IMAGE_REGISTRY_URL}}/${{ github.repository }}/${{env.DOCKER_IMAGE_NAME}}:${{ github.sha }}
  # # code inncomplete
  # destroy-azure-resources:
  #   runs-on: ubuntu-latest

  #   if: contains(github.event.pull_request.labels.*.name, 'destroy environment')

  #   ...            
  
        - name: Azure logout
          run: |
            az logout
